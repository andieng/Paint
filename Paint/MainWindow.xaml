<Window x:Class="Paint.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:local="clr-namespace:Paint"
		xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Icon="./Resources/paint-32x32.png"
        Loaded="Window_Loaded"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="PATE Paint" Height="750" Width="1050">
    <Window.Resources>
        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#eaeaea"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TransparentActionButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFE1E2FA"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TransparentToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFF3F4FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TransparentToggleActionButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFE1E2FA"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToggleButtonDisableStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFF3F4FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToggleButtonActiveStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="#FFF8F8FD"/>
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#FFB8BDF9" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#FFB8BDF9" BorderThickness="1.4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFECEEFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToggleButtonPluginDisableStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Gray">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFF3F4FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToggleButtonPluginActiveStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="#FFF8F8FD"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#FFB8BDF9" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#FFB8BDF9" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFECEEFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DefaultStyle" TargetType="{x:Type Popup}">
            <Setter Property="StaysOpen" Value="False" />
            <EventSetter Event="Button.Click" Handler="popup_Click" />
        </Style>

        <Style x:Key="PopUpBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Padding" Value="7" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="BorderBrush" Value="#e5e5e5" />
            <Setter Property="Background" Value="#FFFDFDFD" />
            <Setter Property="BorderThickness" Value="0.8" />
        </Style>

        <Style x:Key="PopUpButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#eaeaea"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PopUpRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6" 
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FF6F6F6F">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#eaeaea"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#FFF3F3F3"/>
                    <Setter Property="BorderThickness" Value="0.6"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border  BorderThickness="0" Background="#FFAEAEAE" Height="4"
                                 CornerRadius="0,2,2,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" Background="#FF8C91E8" BorderThickness="0" 
                                Height="4" CornerRadius="2,0,0,2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Border CornerRadius="20" Width="22" Height="22" Background="#fff">
                            <Ellipse x:Name="thumbEllipse" Height="10.5" Width="10.5" Fill="#FF8C91E8">
                                <Ellipse.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="thumbEllipse"
                                                    Storyboard.TargetProperty="Width" To="14" Duration="0:0:0.1" />
                                                <DoubleAnimation
                                                    Storyboard.TargetName="thumbEllipse"
                                                    Storyboard.TargetProperty="Height" To="14" Duration="0:0:0.1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="thumbEllipse"
                                                    Storyboard.TargetProperty="Width" To="10.5" Duration="0:0:0.1" />
                                                <DoubleAnimation
                                                    Storyboard.TargetName="thumbEllipse"
                                                    Storyboard.TargetProperty="Height" To="10.5" Duration="0:0:0.1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Ellipse.Triggers>
                            </Ellipse>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="HorizontalSliderStyle" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="42" />
            <RowDefinition Height="100" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--Action box-->
        <DockPanel Grid.Row="0" Background="#FFEEEFFD" LastChildFill="False">

            <!--File button - Toggle file menu-->
            <ToggleButton x:Name="fileButton" DockPanel.Dock="Left" Style="{StaticResource TransparentToggleActionButtonStyle}" Margin="8,5,0,5"
                    Width="50" Content="File" FontSize="14" Click="fileButton_Click">
                <ToggleButton.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </ToggleButton.Resources>
            </ToggleButton>

            <!--Drop down menu for File button-->
            <Popup x:Name="popupFile" AllowsTransparency="True" Style="{StaticResource DefaultStyle}" PlacementTarget="{Binding ElementName=fileButton}">
                <UserControl Background="Transparent">
                    <Border Style="{StaticResource PopUpBorderStyle}" Width="280">
                        <StackPanel Background="Transparent">
                            <Button Style="{StaticResource PopUpButtonStyle}" Click="newButton_Click">
                                <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                    <Image DockPanel.Dock="Left" Source="./Resources/new-file.png" Width="18" Height="18"/>
                                    <TextBlock DockPanel.Dock="Right" Text="Ctrl+N" FontSize="13" Style="{StaticResource ToolTextStyle}" />
                                    <TextBlock DockPanel.Dock="Left" Text="New" Margin="12 0 0 0" FontSize="14" />
                                </DockPanel>
                            </Button>
                            <Button Style="{StaticResource PopUpButtonStyle}" Margin="0 5 0 0" Click="importObjectsButton_Click">
                                <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                    <Image DockPanel.Dock="Left" Source="./Resources/import-objects.png" Width="18" Height="18"/>
                                    <TextBlock DockPanel.Dock="Right" Text="Ctrl+O" FontSize="13" Style="{StaticResource ToolTextStyle}" />
                                    <TextBlock DockPanel.Dock="Left" Text="Import drawn objects" Margin="12 0 0 0" FontSize="14" />
                                </DockPanel>
                            </Button>
                            <Button Style="{StaticResource PopUpButtonStyle}" Margin="0 5 0 0" Click="importImageButton_Click">
                                <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                    <Image DockPanel.Dock="Left" Source="./Resources/import-image.png" Width="18" Height="18"/>
                                    <TextBlock DockPanel.Dock="Right" Text="Ctrl+I" FontSize="13" Style="{StaticResource ToolTextStyle}" />
                                    <TextBlock DockPanel.Dock="Left" Text="Import image" Margin="12 0 0 0" FontSize="14" />
                                </DockPanel>
                            </Button>
                            <Button x:Name="saveObjectsButton" Style="{StaticResource PopUpButtonStyle}" Margin="0 5 0 0"
                                    Click="saveObjectsButton_Click">
                                <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                    <Image DockPanel.Dock="Left" Source="./Resources/square-shapes.png" Width="18" Height="18"/>
                                    <TextBlock DockPanel.Dock="Right" Text="Ctrl+D" FontSize="13" Style="{StaticResource ToolTextStyle}" />
                                    <TextBlock DockPanel.Dock="Left" Text="Save drawn objects" Margin="12 0 0 0" FontSize="14" />
                                </DockPanel>
                            </Button>
                            <Button x:Name="saveImageButton" Style="{StaticResource PopUpButtonStyle}" Margin="0 5 0 0"
                                    Click="saveImageButton_Click">
                                <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                    <Image DockPanel.Dock="Left" Source="./Resources/picture.png" Width="18" Height="18"/>
                                    <TextBlock DockPanel.Dock="Right" Text="Ctrl+S" FontSize="13" Style="{StaticResource ToolTextStyle}" />
                                    <TextBlock DockPanel.Dock="Left" Text="Save as image" Margin="12 0 0 0" FontSize="14" />
                                </DockPanel>
                            </Button>
                        </StackPanel>
                    </Border>
                </UserControl>
            </Popup>

            <!--Edit button - Toggle edit menu-->
            <ToggleButton x:Name="editButton" DockPanel.Dock="Left" Style="{StaticResource TransparentToggleActionButtonStyle}" Margin="5,5,8,5"
                    Width="50" Content="Edit" FontSize="14" Click="editButton_Click">
                <ToggleButton.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </ToggleButton.Resources>
            </ToggleButton>

            <!--Drop down menu for Edit button-->
            <Popup x:Name="popupEdit" AllowsTransparency="True" Style="{StaticResource DefaultStyle}" PlacementTarget="{Binding ElementName=editButton}">
                <UserControl Background="Transparent">
                    <Border Style="{StaticResource PopUpBorderStyle}" Width="190">
                        <StackPanel Background="Transparent">
                            <Button Style="{StaticResource PopUpButtonStyle}" Click="cutButton_Click">
                                <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                    <Image DockPanel.Dock="Left" Source="./Resources/cut.png" Width="18" Height="18"/>
                                    <TextBlock DockPanel.Dock="Right" Text="Ctrl+X" FontSize="13" Style="{StaticResource ToolTextStyle}" />
                                    <TextBlock DockPanel.Dock="Left" Text="Cut" Margin="12 0 0 0" FontSize="14" />
                                </DockPanel>
                            </Button>
                            <Button Style="{StaticResource PopUpButtonStyle}" Margin="0 5 0 0" Click="copyButton_Click">
                                <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                    <Image DockPanel.Dock="Left" Source="./Resources/copy.png" Width="18" Height="18"/>
                                    <TextBlock DockPanel.Dock="Right" Text="Ctrl+C" FontSize="13" Style="{StaticResource ToolTextStyle}" />
                                    <TextBlock DockPanel.Dock="Left" Text="Copy" Margin="12 0 0 0" FontSize="14" />
                                </DockPanel>
                            </Button>
                            <Button Style="{StaticResource PopUpButtonStyle}" Margin="0 5 0 0" Click="pasteButton_Click">
                                <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                    <Image DockPanel.Dock="Left" Source="./Resources/paste.png" Width="18" Height="18"/>
                                    <TextBlock DockPanel.Dock="Right" Text="Ctrl+V" FontSize="13" Style="{StaticResource ToolTextStyle}" />
                                    <TextBlock DockPanel.Dock="Left" Text="Paste" Margin="12 0 0 0" FontSize="14" />
                                </DockPanel>
                            </Button>
                        </StackPanel>
                    </Border>
                </UserControl>
            </Popup>

            <!--Separator-->
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" HorizontalAlignment="Center">
                <Separator Background="#FFD8DAFC" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                           Height="25">
                    <Separator.RenderTransform>
                        <ScaleTransform ScaleX="0.7" />
                    </Separator.RenderTransform>
                </Separator>
            </StackPanel>

            <!--Save button-->
            <Button DockPanel.Dock="Left" Style="{StaticResource TransparentActionButtonStyle}" Margin="6,5,6,5"
                    Width="32" ToolTip="Save (Ctrl+S)" Click="saveImageButton_Click">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </Button.Resources>
                <Image Source="./Resources/save.png" Width="22" Height="22" />
            </Button>

            <!--Separator-->
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" HorizontalAlignment="Center">
                <Separator Background="#FFD8DAFC" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                           Height="25">
                    <Separator.RenderTransform>
                        <ScaleTransform ScaleX="0.7" />
                    </Separator.RenderTransform>
                </Separator>
            </StackPanel>

            <!--Undo button-->
            <Button DockPanel.Dock="Left" x:Name="undoButton" IsEnabled="False"
                    Margin="5 5 5 5" Width="32" ToolTip="Undo (Ctrl+Z)" Click="undoButton_Click">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </Button.Resources>
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource TransparentActionButtonStyle}">
                        <Setter Property="Content">
                            <Setter.Value>
                                <Image Source="./Resources/undo-disable.png" Width="20" Height="20" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Image Source="./Resources/undo.png" Width="20" Height="20" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!--Redo button-->
            <Button DockPanel.Dock="Left" x:Name="redoButton" IsEnabled="False"
                    Margin="5 5 5 5" Width="32" ToolTip="Redo (Ctrl+Y)" Click="redoButton_Click">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                </Button.Resources>
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource TransparentActionButtonStyle}">
                        <Setter Property="Content">
                            <Setter.Value>
                                <Image Source="./Resources/redo-disable.png" Width="20" Height="20" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <Image Source="./Resources/redo.png" Width="20" Height="20" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            
            <!--Slider-->
            <StackPanel DockPanel.Dock="Right" VerticalAlignment="Center" Margin="0,0,20,0" 
                        Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBox Text="{Binding ElementName=slider, Path=Value, UpdateSourceTrigger=PropertyChanged}" 
                         TextAlignment="Right" Width="40" VerticalContentAlignment="Center" BorderBrush="#535353"
                         BorderThickness="0.5" Padding="4 0 4 0" Height="22">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>
                <Button Margin="15,0,0,0" Click="zoomOutButton_Click" Style="{StaticResource TransparentActionButtonStyle}"
                        Width="30" Height="30">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </Button.Resources>
                    <Image Source="Resources/zoom-out.png" Width="18" Height="18" />
                </Button>
                <Slider x:Name="slider" Maximum="1000" Minimum="10" Value="100" Width="180"
                        TickFrequency="1" IsSnapToTickEnabled="True" ValueChanged="slider_ValueChanged" 
                        Margin="8,0,0,0" VerticalAlignment="Center" Style="{StaticResource HorizontalSliderStyle}" />
                <Button Margin="8,0,0,0" Click="zoomInButton_Click" Style="{StaticResource TransparentActionButtonStyle}"
                        Width="30" Height="30">
                    <Button.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </Button.Resources>
                    <Image Source="Resources/zoom-in.png" Width="18" Height="18" />
                </Button>
            </StackPanel>
        </DockPanel>

        <!--Toolbox-->
        <Border Grid.Row="1" BorderThickness="0,0.4,0,0.4" BorderBrush="#FFD7D7D7">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="110" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="227" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="140" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="90" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="100" />
				</Grid.ColumnDefinitions>

                <!--Selection-->
                <DockPanel Grid.Column="0">
                    <!--Select title-->
                    <TextBlock Text="Selection" DockPanel.Dock="Bottom" VerticalAlignment="Center" HorizontalAlignment="Center"
                           Style="{StaticResource ToolTextStyle}" Margin="0,0,0,18" />

                    <!--Select button-->
                    <ToggleButton x:Name="selectToggleButton" DockPanel.Dock="Top" Style="{StaticResource ToggleButtonDisableStyle}"
                                  Margin="5,8,5,0" Width="37" ToolTip="Select" Height="37" Checked="selectToggleButton_Checked"
                                  Unchecked="selectToggleButton_Unchecked">
                        <ToggleButton.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="5"/>
                            </Style>
                        </ToggleButton.Resources>
                        <Image Source="./Resources/selection.png" Width="26" Height="26" />
                    </ToggleButton>
                </DockPanel>

                <!--Separator-->
                <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Center">
                    <Separator Background="#e5e5e5" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                           Height="86">
                        <Separator.RenderTransform>
                            <ScaleTransform ScaleX="0.6" />
                        </Separator.RenderTransform>
                    </Separator>
                </StackPanel>

                <!--Rotate & Flip-->
                <DockPanel Grid.Column="2">
                    <!--Rotate & Flip title-->
                    <TextBlock Text="Rotate &amp; Flip" DockPanel.Dock="Bottom" VerticalAlignment="Center" HorizontalAlignment="Center"
                           Style="{StaticResource ToolTextStyle}" Margin="0,0,0,18" />
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Center" >

                        <!--Rotate button - Toggle rotate menu-->
                        <ToggleButton x:Name="rotateButton" Style="{StaticResource TransparentToggleButtonStyle}" 
                                  Margin="5,5,5,0" Width="34" ToolTip="Rotate" Height="34" Click="rotateButton_Click">
                            <ToggleButton.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </ToggleButton.Resources>
                            <Image Source="./Resources/rotate-right.png" Width="27" Height="27" />
                        </ToggleButton>

                        <!--Drop down menu for Rotate button-->
                        <Popup x:Name="popupRotate" AllowsTransparency="True" Style="{StaticResource DefaultStyle}" PlacementTarget="{Binding ElementName=rotateButton}">
                            <UserControl Background="Transparent">
                                <Border Style="{StaticResource PopUpBorderStyle}" Width="200">
                                    <StackPanel Background="Transparent">
                                        <Button Style="{StaticResource PopUpButtonStyle}" Click="RotateRight90Degrees_Click">
                                            <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                                <Image DockPanel.Dock="Left" Source="./Resources/rotate-right.png" Width="18" Height="18"/>
                                                <TextBlock DockPanel.Dock="Left" Text="Rotate right 90°" Margin="12 0 0 0" FontSize="14" />
                                            </DockPanel>
                                        </Button>
                                        <Button Style="{StaticResource PopUpButtonStyle}" Margin="0 5 0 0" Click="RotateLeft90Degrees_Click">
                                            <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                                <Image DockPanel.Dock="Left" Source="./Resources/rotate-left.png" Width="18" Height="18"/>
                                                <TextBlock DockPanel.Dock="Left" Text="Rotate left 90°" Margin="12 0 0 0" FontSize="14" />
                                            </DockPanel>
                                        </Button>
                                    </StackPanel>
                                </Border>
                            </UserControl>
                        </Popup>

                        <!--Flip button - Toggle flip menu-->
                        <ToggleButton x:Name="flipButton" Style="{StaticResource TransparentToggleButtonStyle}" 
                                  Margin="5,9,5,0" Width="34" ToolTip="Flip" Height="34" Click="flipButton_Click">
                            <ToggleButton.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </ToggleButton.Resources>
                            <Image Source="./Resources/flip-horizontal.png" Width="27" Height="27" />
                        </ToggleButton>

                        <!--Drop down menu for Flip button-->
                        <Popup x:Name="popupFlip" AllowsTransparency="True" Style="{StaticResource DefaultStyle}" PlacementTarget="{Binding ElementName=flipButton}">
                            <UserControl Background="Transparent">
                                <Border Style="{StaticResource PopUpBorderStyle}" Width="200">
                                    <StackPanel Background="Transparent">
                                        <Button Style="{StaticResource PopUpButtonStyle}" Click="FlipHorizontally_Click">
                                            <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                                <Image DockPanel.Dock="Left" Source="./Resources/flip-horizontal.png" Width="18" Height="18"/>
                                                <TextBlock DockPanel.Dock="Left" Text="Flip horizontal" Margin="12 0 0 0" FontSize="14" />
                                            </DockPanel>
                                        </Button>
                                        <Button Style="{StaticResource PopUpButtonStyle}" Margin="0 5 0 0" Click="FlipVertically_Click">
                                            <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                                <Image DockPanel.Dock="Left" Source="./Resources/flip-vertical.png" Width="18" Height="18"/>
                                                <TextBlock DockPanel.Dock="Left" Text="Flip vertical" Margin="12 0 0 0" FontSize="14" />
                                            </DockPanel>
                                        </Button>
                                    </StackPanel>
                                </Border>
                            </UserControl>
                        </Popup>
                    </StackPanel>
                </DockPanel>

                <!--Separator-->
                <StackPanel Orientation="Horizontal" Grid.Column="3" HorizontalAlignment="Center">
                    <Separator Background="#e5e5e5" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                           Height="86">
                        <Separator.RenderTransform>
                            <ScaleTransform ScaleX="0.6" />
                        </Separator.RenderTransform>
                    </Separator>
                </StackPanel>

                <!--Stroke-->
                <DockPanel Grid.Column="4">
                    <!--Stroke title-->
                    <TextBlock Text="Stroke" DockPanel.Dock="Bottom" VerticalAlignment="Center" HorizontalAlignment="Center"
                           Style="{StaticResource ToolTextStyle}" Margin="0,0,0,18" />
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Center" >

                        <!--Stroke button-->
                        <ToggleButton x:Name="strokeToggleButton" Style="{StaticResource ToggleButtonActiveStyle}" 
                                      Margin="5,5,5,0" Width="34" Height="34" Checked="strokeToggleButton_Checked"
                                      IsChecked="True" Unchecked="strokeToggleButton_Unchecked" Click="strokeToggleButton_Click">
                            <ToggleButton.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </ToggleButton.Resources>
                            <Image Source="./Resources/stroke.png" Width="27" Height="27" />
                        </ToggleButton>

                        <!--Stroke type button - Toggle stroke type menu-->
                        <ToggleButton x:Name="strokeTypeButton" Style="{StaticResource TransparentToggleButtonStyle}" 
                                  Margin="5,5,5,0" Width="34" ToolTip="Stroke type" Height="34" Click="strokeTypeButton_Click">
                            <ToggleButton.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </ToggleButton.Resources>
                            <Image Source="./Resources/stroke-type.png" Width="27" Height="27" />
                        </ToggleButton>

                        <!--Drop down menu for Stroke type button-->
                        <Popup x:Name="popupStrokeType" AllowsTransparency="True" Style="{StaticResource DefaultStyle}" PlacementTarget="{Binding ElementName=strokeTypeButton}">
                            <UserControl Background="Transparent">
                                <Border Style="{StaticResource PopUpBorderStyle}" Width="260">
                                    <StackPanel Background="Transparent">
                                        <RadioButton x:Name="solidStrokeButton" Style="{StaticResource PopUpRadioButtonStyle}" GroupName="strokeTypeGroup" Checked="strokeType_Checked" IsChecked="True">
                                            <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                                <TextBlock DockPanel.Dock="Left" Text="Solid" FontSize="13" Width="110" />
                                                <Line DockPanel.Dock="Right" Stroke="#FF262626"
                                                  StrokeThickness="1" X1="0" X2="120" HorizontalAlignment="Right" 
                                                  VerticalAlignment="Center" Margin="0,1,0,0"/>
                                            </DockPanel>
                                        </RadioButton>
                                        <RadioButton x:Name="dashedStrokeButton" Style="{StaticResource PopUpRadioButtonStyle}" Margin="0 5 0 0" GroupName="strokeTypeGroup" Checked="strokeType_Checked">
                                            <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                                <TextBlock DockPanel.Dock="Left" Text="Dashed" FontSize="13" Width="110" />
                                                <Rectangle Stroke="#FF262626" StrokeThickness="2" StrokeDashArray="4 6.1" Height="1.5"
                                                       SnapsToDevicePixels="True" DockPanel.Dock="Right" Width="120" 
                                                       HorizontalAlignment="Right"/>
                                            </DockPanel>
                                        </RadioButton>
                                        <RadioButton x:Name="dottedStrokeButton" Style="{StaticResource PopUpRadioButtonStyle}" Margin="0 5 0 0" GroupName="strokeTypeGroup" Checked="strokeType_Checked">
                                            <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                                <TextBlock DockPanel.Dock="Left" Text="Dotted" FontSize="13" Width="110" />
                                                <Rectangle Stroke="#FF262626" StrokeThickness="2" StrokeDashArray="1 5" Height="1.5"
                                                       SnapsToDevicePixels="True" DockPanel.Dock="Right" Width="300" 
                                                       HorizontalAlignment="Right"/>
                                            </DockPanel>
                                        </RadioButton>
                                        <RadioButton x:Name="dashedDottedStrokeButton" Style="{StaticResource PopUpRadioButtonStyle}" Margin="0 5 0 0" GroupName="strokeTypeGroup" Checked="strokeType_Checked">
                                            <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                                <TextBlock DockPanel.Dock="Left" Text="Dashed-dotted" FontSize="13" Width="110" />
                                                <Rectangle Stroke="#FF262626" StrokeThickness="1.8" StrokeDashArray="4 2 1 2" Height="1.5"
                                                       SnapsToDevicePixels="True" DockPanel.Dock="Right" Width="200" 
                                                       HorizontalAlignment="Right"/>
                                            </DockPanel>
                                        </RadioButton>
                                    </StackPanel>
                                </Border>
                            </UserControl>
                        </Popup>

                        <!--Stroke size button - Toggle stroke size menu-->
                        <ToggleButton x:Name="strokeSizeButton" Style="{StaticResource TransparentToggleButtonStyle}" 
                                  Margin="5,5,5,0" Width="34" ToolTip="Stroke size" Height="34" Click="strokeSizeButton_Click">
                            <ToggleButton.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </ToggleButton.Resources>
                            <Image Source="./Resources/stroke-size.png" Width="27" Height="27" />
                        </ToggleButton>

                        <!--Drop down menu for Stroke size button-->
                        <Popup x:Name="popupStrokeSize" AllowsTransparency="True" Style="{StaticResource DefaultStyle}" PlacementTarget="{Binding ElementName=strokeSizeButton}">
                            <UserControl Background="Transparent">
                                <Border Style="{StaticResource PopUpBorderStyle}" Width="200">
                                    <StackPanel Background="Transparent">
                                        <RadioButton x:Name="oneThicknessButton" Style="{StaticResource PopUpRadioButtonStyle}" GroupName="strokeSizeGroup" Checked="strokeSize_Checked" IsChecked="True">
                                            <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                                <TextBlock DockPanel.Dock="Left" Text="1px" FontSize="14" />
                                                <Line DockPanel.Dock="Right" Stroke="#FF565656"
                                                  StrokeThickness="1" X1="0" X2="125" HorizontalAlignment="Right" 
                                                  VerticalAlignment="Center" Margin="0,1,0,0"/>
                                            </DockPanel>
                                        </RadioButton>
                                        <RadioButton x:Name="threeThicknessButton" Style="{StaticResource PopUpRadioButtonStyle}" Margin="0,8,0,0" GroupName="strokeSizeGroup" Checked="strokeSize_Checked">
                                            <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                                <TextBlock DockPanel.Dock="Left" Text="3px" FontSize="14" />
                                                <Line DockPanel.Dock="Right" Stroke="#FF565656"
                                                  StrokeThickness="3" X1="0" X2="125" HorizontalAlignment="Right" 
                                                  VerticalAlignment="Center" Margin="0,3,0,0"/>
                                            </DockPanel>
                                        </RadioButton>
                                        <RadioButton x:Name="fiveThicknessButton" Style="{StaticResource PopUpRadioButtonStyle}" Margin="0,8,0,0" GroupName="strokeSizeGroup" Checked="strokeSize_Checked">
                                            <DockPanel VerticalAlignment="Center" Margin="8,5,8,5">
                                                <TextBlock DockPanel.Dock="Left" Text="5px" FontSize="14" />
                                                <Line DockPanel.Dock="Right" Stroke="#FF565656"
                                                  StrokeThickness="5" X1="0" X2="125" HorizontalAlignment="Right" 
                                                  VerticalAlignment="Center" Margin="0,5,0,0"/>
                                            </DockPanel>
                                        </RadioButton>
                                        <RadioButton x:Name="eightThicknessButton" Style="{StaticResource PopUpRadioButtonStyle}" Margin="0,8,0,0" GroupName="strokeSizeGroup" Checked="strokeSize_Checked">
                                            <DockPanel VerticalAlignment="Center" Margin="8 5 8 5">
                                                <TextBlock DockPanel.Dock="Left" Text="8px" FontSize="14" />
                                                <Line DockPanel.Dock="Right" Stroke="#FF565656"
                                                  StrokeThickness="8" X1="0" X2="125" HorizontalAlignment="Right" 
                                                  VerticalAlignment="Center" Margin="0,7,0,0"/>
                                            </DockPanel>
                                        </RadioButton>
                                    </StackPanel>
                                </Border>
                            </UserControl>
                        </Popup>

                        <!--Color picker stroke-->
                        <syncfusion:ColorPicker Width="45" Height="34" Margin="12,5,5,0" x:Name="colorPickerStroke"
                                                ColorChanged="ColorPickerStroke_ColorChanged" BorderThickness="1"
                                                Cursor="Hand" BorderBrush="#FFB8BDF9" Color="Black" Background="White" />
                    </StackPanel>
                </DockPanel>

                <!--Separator-->
                <StackPanel Orientation="Horizontal" Grid.Column="5" HorizontalAlignment="Center">
                    <Separator Background="#e5e5e5" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                           Height="86">
                        <Separator.RenderTransform>
                            <ScaleTransform ScaleX="0.6" />
                        </Separator.RenderTransform>
                    </Separator>
                </StackPanel>

                <!--Fill-->
                <DockPanel Grid.Column="6">
                    <!--Fill title-->
                    <TextBlock Text="Fill" DockPanel.Dock="Bottom" VerticalAlignment="Center" HorizontalAlignment="Center"
                           Style="{StaticResource ToolTextStyle}" Margin="0,0,0,18" />
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Center">
                        <!--Fill button-->
                        <ToggleButton x:Name="fillToggleButton" Style="{StaticResource ToggleButtonDisableStyle}" 
                                      Margin="5,5,5,0" Width="34" Height="34" Checked="fillToggleButton_Checked"
                                      Unchecked="fillToggleButton_Unchecked" Click="fillToggleButton_Click">
                            <ToggleButton.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </ToggleButton.Resources>
                            <Image Source="./Resources/fill.png" Width="27" Height="27" />
                        </ToggleButton>
                        <syncfusion:ColorPicker Width="45" Height="34" Margin="20,5,5,0" x:Name="colorPickerFill"
                                                ColorChanged="ColorPickerFill_ColorChanged" BorderThickness="1"
                                                Cursor="Hand" BorderBrush="#FFB8BDF9" Background="White"/>
                    </StackPanel>
                </DockPanel>

                <!--Separator-->
                <StackPanel Orientation="Horizontal" Grid.Column="7" HorizontalAlignment="Center">
                    <Separator Background="#e5e5e5" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                           Height="86">
                        <Separator.RenderTransform>
                            <ScaleTransform ScaleX="0.6" />
                        </Separator.RenderTransform>
                    </Separator>
                </StackPanel>

                <DockPanel Grid.Column="8">
                    <!--Text color title-->
                    <TextBlock Text="Text color" DockPanel.Dock="Bottom" VerticalAlignment="Center" HorizontalAlignment="Center"
                           Style="{StaticResource ToolTextStyle}" Margin="0,0,0,18" />
                    <syncfusion:ColorPicker DockPanel.Dock="Top" Width="45" Height="34" Margin="0,5,0,0" x:Name="colorPickerText"
                                                ColorChanged="ColorPickerText_ColorChanged" BorderThickness="1" Color="Black"
                                                Cursor="Hand" BorderBrush="#FFB8BDF9" Background="White"/>
                </DockPanel>

                <!--Separator-->
                <StackPanel Orientation="Horizontal" Grid.Column="9" HorizontalAlignment="Center">
                    <Separator Background="#e5e5e5" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                           Height="86">
                        <Separator.RenderTransform>
                            <ScaleTransform ScaleX="0.6" />
                        </Separator.RenderTransform>
                    </Separator>
                </StackPanel>

                <!--Shapes & Text-->
                <DockPanel Grid.Column="10">
                    <!--Shapes & Text title-->
                    <TextBlock Text="Shapes &amp; Text" DockPanel.Dock="Bottom" VerticalAlignment="Center" HorizontalAlignment="Center"
                           Style="{StaticResource ToolTextStyle}" Margin="15,0,15,18" />
                    <ItemsControl x:Name="shapesItemsControl">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel x:Name="shapesStackPanel" Height="80" DockPanel.Dock="Top" HorizontalAlignment="Left" Margin="0,10,0,0"
                                            VerticalAlignment="Center" Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </DockPanel>

				<!--Separator-->
				<StackPanel Orientation="Horizontal" Grid.Column="9" HorizontalAlignment="Center">
					<Separator Background="#e5e5e5" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                           Height="86">
						<Separator.RenderTransform>
							<ScaleTransform ScaleX="0.6" />
						</Separator.RenderTransform>
					</Separator>
				</StackPanel>

				<!--Text To Image-->
				<DockPanel Grid.Column="11">
					<!--Text color title-->
					<TextBlock Text="Text To Image" DockPanel.Dock="Bottom" VerticalAlignment="Center" HorizontalAlignment="Center"
                           Style="{StaticResource ToolTextStyle}" Margin="0,0,0,18" />
					<!--Select button-->
					<ToggleButton x:Name="textToImgToggleButton" DockPanel.Dock="Top" Style="{StaticResource ToggleButtonDisableStyle}"
              Margin="5,8,5,0" Width="37" ToolTip="Select" Height="37" Click="textToImgToggleButton_Click"
              Unchecked="selectToggleButton_Unchecked">
						<ToggleButton.Resources>
							<Style TargetType="Border">
								<Setter Property="CornerRadius" Value="5"/>
							</Style>
						</ToggleButton.Resources>
						<Image Source="./Resources/close.png" Width="26" Height="26" />
					</ToggleButton>
				</DockPanel>
			</Grid>
        </Border>

        <ScrollViewer x:Name="scrollViewer" Grid.Row="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Grid x:Name="interactive" Background="#FFEEEFFD" >
                <Canvas x:Name="canvas" Background="#fff" Width="850" Height="490" HorizontalAlignment="Center" ClipToBounds="True"/>
				<Border x:Name="border" Background="Transparent" MouseDown="canvas_MouseDown" Height="490"
                    MouseUp="canvas_MouseUp" MouseMove="canvas_MouseMove" Width="850" HorizontalAlignment="Center" />
				<!-- Loading -->
				<fa:ImageAwesome x:Name="spinner" Visibility="Hidden" Icon="Spinner" Spin="True" Height="40" Width="40" Foreground="#ffe1e2fa"/>
			</Grid>
        </ScrollViewer>
    </Grid>
</Window>
